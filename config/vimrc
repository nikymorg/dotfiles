" show line numbers
set number

" syntax highlighting
syntax on
syntax enable
set re=0

" set fold method
set foldmethod=syntax
set nofoldenable

" keep 500 commands in history
set history=500

" show cursor position
set ruler

" show incomplete commands
set showcmd

" show menu for tab completion
set wildmenu

" keep 5 line margin
set scrolloff=5

" search settings
set hlsearch
set incsearch
set ignorecase

" line wrap at space
set lbr

" indentation
set smartindent
set autoindent     " open lines at same indentation
set expandtab      " turn tabs into tabstop spaces
set tabstop=2      " 1 tab = 2 spaces
set shiftwidth=2   " shift 2 spaces

" colorscheme
colorscheme desert

" whitespace
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()
autocmd FileType netrw setl bufhidden=delete

" autoload plugins
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source ~/.vimrc
endif

" plugins
call plug#begin()
Plug 'dense-analysis/ale'
Plug 'github/copilot.vim'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'ludovicchabant/vim-gutentags'
Plug 'tpope/vim-vinegar'
call plug#end()

" grep
set grepprg=rg\ --vimgrep\ --smart-case\ --follow

" fuzzy finder
nnoremap <silent> <C-p> :GFiles<CR>
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*/node_modules/*,*/log/*,*/app/assets/javascripts/_bundles/*,*.beam,*/_build,*/deps/*

" Ale linting settings
let g:ale_ruby_sorbet_executable = "./bin/srb"
let g:ale_javascript_eslint_executable = "./bin/eslint"

let g:ale_fixers = {
\   'javascript': ['eslint'],
\   'ruby': ['rubocop', 'srb'],
\   'erb': ['erblint']
\}

highlight clear SignColumn
highlight ALEErrorSign ctermbg=NONE ctermfg=red
highlight ALEWarningSign ctermbg=NONE ctermfg=yellow

let g:ale_change_sign_column_color = 0
let g:ale_lint_on_text_changed = 'never'
let g:ale_lint_on_insert_leave = 0
let g:ale_lint_on_enter = 0
let g:ale_sign_error = '✘'
let g:ale_sign_warning = '⚠'

let g:ale_echo_cursor = 1
let g:ale_echo_msg_error_str = 'Error'
let g:ale_echo_msg_format = '%code: %%s'
let g:ale_echo_msg_info_str = 'Info'
let g:ale_echo_msg_warning_str = 'Warning'
